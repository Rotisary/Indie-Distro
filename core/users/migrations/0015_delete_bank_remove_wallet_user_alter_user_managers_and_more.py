# Generated by Django 5.2.5 on 2025-08-13 08:54

import core.users.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('users', '0014_alter_wallet_balance'),
    ]

    operations = [
        migrations.DeleteModel(
            name='Bank',
        ),
        migrations.RemoveField(
            model_name='wallet',
            name='user',
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', core.users.models.UserManager()),
            ],
        ),
        migrations.RenameField(
            model_name='user',
            old_name='date_joined',
            new_name='date_added',
        ),
        migrations.RemoveField(
            model_name='user',
            name='age',
        ),
        migrations.RemoveField(
            model_name='user',
            name='ip_address',
        ),
        migrations.RemoveField(
            model_name='user',
            name='is_admin',
        ),
        migrations.RemoveField(
            model_name='user',
            name='name',
        ),
        migrations.AddField(
            model_name='user',
            name='account_type',
            field=models.CharField(blank=True, choices=[('super_administrator', 'SUPER_ADMINISTRATOR'), ('staff', 'STAFF'), ('site_user', 'USER')], default='site_user', max_length=20, verbose_name='Account Type'),
        ),
        migrations.AddField(
            model_name='user',
            name='ban_duration_in_minutes',
            field=models.PositiveIntegerField(default=0, verbose_name='Ban duration in minutes'),
        ),
        migrations.AddField(
            model_name='user',
            name='ban_expiry_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='User account ban expiry date'),
        ),
        migrations.AddField(
            model_name='user',
            name='bio',
            field=models.CharField(blank=True, max_length=120, null=True, verbose_name='About Me'),
        ),
        migrations.AddField(
            model_name='user',
            name='date_last_modified',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='user',
            name='dob',
            field=models.DateField(blank=True, null=True, verbose_name='Date of Birth'),
        ),
        migrations.AddField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='First Name'),
        ),
        migrations.AddField(
            model_name='user',
            name='gender',
            field=models.CharField(blank=True, choices=[('Male', 'MALE'), ('Female', 'FEMALE'), ('Other', 'OTHER')], max_length=50, null=True, verbose_name='Gender'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='has_pending_issues',
            field=models.BooleanField(blank=True, default=False, verbose_name='Has Pending Issue?'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_banned',
            field=models.BooleanField(default=False, verbose_name='User account has been banned'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_email_verified',
            field=models.BooleanField(blank=True, default=False, verbose_name='Email Verified?'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_phone_number_verified',
            field=models.BooleanField(blank=True, default=False, verbose_name='Phone Number Verified?'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_verified',
            field=models.BooleanField(default=False, verbose_name='Account Verified?'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Last Name'),
        ),
        migrations.AddField(
            model_name='user',
            name='location',
            field=models.CharField(max_length=255, null=True, verbose_name='Location (State, Country)'),
        ),
        migrations.AddField(
            model_name='user',
            name='total_earned',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, verbose_name='Total Earned'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=225, unique=True, verbose_name='Email'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AlterField(
            model_name='user',
            name='phone_number',
            field=models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Phone Number'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Username'),
        ),
        migrations.DeleteModel(
            name='SubAccount',
        ),
        migrations.DeleteModel(
            name='Wallet',
        ),
    ]
